@model DataLayer.BlogPostDetailsViewModel

@{
    ViewBag.Title = "Details";
    ViewBag.id = Model.blogID;
}

<style>
    #contentContainer {
        border-style: groove;
    }
</style>



<h2>@Html.DisplayFor(model => model.title)</h2>
<div id="test">
    <h4>by @Html.ActionLink(Html.DisplayFor(model => model.author.FirstName) + " " + Html.DisplayFor(model => model.author.LastName), "Profile", "Blog", new { id = Model.author.Id }, new { @class = "btn-default" })</h4>
    <h7>on @Html.DisplayFor(model => model.date)</h7>
    @if (Model.ratings.Count > 0)
    {
        <h7>AVERAGE RATING @ViewBag.avgrating</h7>
    }

    <hr />
    <dl >
        <dd id="contentContainer">
            @if (Model.reports.Count > 2)
            {
                <p>This post has been reported too many times, and is hidden till the moderators review it</p>
            }
            else
            {
            @Html.DisplayFor(model => model.content, new { cols = 100, @rows = 50 })
            }
         </dd>

        <dt>
            @Html.DisplayNameFor(model => model.tags)
        </dt>

        <dd>
            @foreach (var tag in Model.tags)
            {
                @Html.ActionLink(@tag.tagName, "Search", "Blog", new { s = @tag.tagName }, new { @class = "btn-default" })
                <b> </b>
            }
        </dd>

    </dl>
</div>
<p>
    @if (ViewBag.userID == Model.author.Id)
    {
        @Html.ActionLink("Edit", "Edit", "Blog", new { id = Model.blogID })
    }

    @using (Html.BeginForm())
    {
        @Html.HiddenFor(model => model.blogID)
        @Html.AntiForgeryToken()
        if (ViewBag.userID != null && Model.ratings != null)
        {
            <div style="float:left">
                <div class="editor_field">
                    @Html.EditorFor(model => model.newRating)
                    @Html.ValidationMessageFor(model => model.newRating)
                </div>
                <input type="submit" value="Rate" class="btn btn-default" />
            </div>

        }
    }

    <div style="float:right">
        @if (ViewBag.userID != null && Model.ratings != null)
        {
        if (ViewBag.isReported==true)
        {
            <label>Report submitted</label>
            }
            else
            {
                using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.blogID)
                    <div>
                       @{ Model.newreport = ViewBag.userID;}
                        @Html.HiddenFor(model => model.newreport)
                        <input type="submit" value="Report" class="btn btn-default" />
                    </div>
                }

            }
        }
    </div>


    <br />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.blogID)
        @Html.HiddenFor(model => model.author)
        @Html.HiddenFor(model => model.date)
        @Html.HiddenFor(model => model.ratings)
        @Html.HiddenFor(model => model.tags)
        @Html.HiddenFor(model => model.title)

        if (ViewBag.userID != null)
        {
            <div class="form-group">
                <h4> @Html.LabelFor(model => model.comments, htmlAttributes: new {  })</h4>
                              
                    @Html.EditorFor(model => model.newComment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.content, "", new { @class = "text-danger" })
                <br/>
                <input type="submit" value="Comment" class="btn btn-default" />
            </div>

        }


        
        foreach (var comment in Model.comments)
        {
            
            <h4 class="list-group-item-heading">@Html.DisplayFor(model => comment.contents)  
                    @if (comment.theAuthorID == ViewBag.userID)
                    {
                        <form style="float:right">
                            <input  type="submit" class="btn btn-default" value="Delete Comment" formaction="@Url.Action("DeleteComment", new { id = comment.Id, blogId=Model.blogID })"/>
                        </form>
                    }


                        </h4> 
            <p class="list-group-item-text">@Html.DisplayFor(model => comment.Author) @Html.DisplayFor(model => comment.dateCreated) </p>
            <br/>
        }
    }
    </p>
