@model DataLayer.BlogPostDetailsViewModel

@{
    ViewBag.Title = "Details";
    ViewBag.id = Model.blogID;
}

<style>
    #contentContainer {
        border-style: groove;
    }

    span.stars, span.stars span {
        display: block;
        background: url(stars.png) 0 -16px repeat-x;
        width: 80px;
        height: 16px;
    }

    span.stars span {
        background-position: 0 0;
    }
</style>

<script>
    $.fn.stars = function() {
    return $(this).each(function() {
        // Get the value
        var val = parseFloat($(this).html());
        // Make sure that the value is in 0 - 5 range, multiply to get width
        val = Math.round(val * 2) / 2;
        var size = Math.max(0, (Math.min(5, val))) * 16;
        // Create stars holder
        var $span = $('<span />').width(size);
        // Replace the numerical value with stars
        $(this).html($span);
    });
    }
    
    $(function () {
        $('span.stars').stars();
    });
</script>


<h2>@Html.DisplayFor(model => model.title)</h2>
<div>
    <h4>by @Html.ActionLink(Html.DisplayFor(model => model.author.FirstName) + " " + Html.DisplayFor(model => model.author.LastName), "Profile", "Blog", new { id = Model.author.Id }, new { @class = "btn-default" })</h4>
    <h7>on @Html.DisplayFor(model => model.date)</h7>
    @if (Model.ratings.Count > 0)
    {
        <span class="stars">@ViewBag.avgrating</span>
    }
    <hr />
    <dl class="dl-horizontal">
        <dd id="contentContainer">
            @Html.DisplayFor(model => model.content, new { cols = 100, @rows = 50 })
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.tags)
        </dt>

        <dd>
            @foreach (var tag in Model.tags)
            {
                @Html.ActionLink(@tag.tagName, "Search", "Blog", new { s = @tag.tagName }, new { @class = "btn-default" })
                <b> </b>
            }
        </dd>

    </dl>
</div>
<p>
    @if (ViewBag.userID == Model.author.Id)
    {
        @Html.ActionLink("Edit", "Edit", "Blog", new { id = Model.blogID })
    }
<!--
   //using (Html.BeginForm())
    //{
        //Html.AntiForgeryToken()
        //if (ViewBag.userID != null && Model.ratings != null)
        //{
        <div class="editor_field"> //Html.TextBoxFor(model => Model.ratings.First())</div>
        <input type="submit" />
       // }
    }
-->
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        if (ViewBag.userID != null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.comments, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.newComment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.content, "", new { @class = "text-danger" })
                </div>
              
                    @Html.LabelFor(model => model.blogID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.blogID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.blogID, "", new { @class = "text-danger" })
                </div>
                    <input type="submit" value="Comment" class="btn btn-default" />
                </div>
        }

        foreach (var comment in Model.comments)
        {
            <h4 class="list-group-item-heading">@Html.DisplayFor(model => comment.Author)</h4>
        <p class="list-group-item-text">@Html.DisplayFor(model=> comment.contents) @Html.DisplayFor(model=> comment.dateCreated) </p>
        <b> </b>
        }
    }
    </p>
